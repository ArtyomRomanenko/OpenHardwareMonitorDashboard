{"ast":null,"code":"var _jsxFileName = \"E:\\\\OHMD\\\\OpenHardwareMonitorDashboard\\\\frontend\\\\src\\\\pages\\\\Metrics.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { metricsAPI } from '../services/api';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Metrics = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [availableDates, setAvailableDates] = useState(null);\n  const [selectedStartDate, setSelectedStartDate] = useState('');\n  const [selectedEndDate, setSelectedEndDate] = useState('');\n  const [metricsData, setMetricsData] = useState([]);\n  const [selectedMetricTypes, setSelectedMetricTypes] = useState([]);\n  const [loadingMetrics, setLoadingMetrics] = useState(false);\n  const metricTypes = [{\n    value: 'cpu_temperature',\n    label: 'CPU Temperature',\n    color: 'rgb(239, 68, 68)'\n  }, {\n    value: 'gpu_temperature',\n    label: 'GPU Temperature',\n    color: 'rgb(220, 38, 127)'\n  }, {\n    value: 'cpu_usage',\n    label: 'CPU Usage',\n    color: 'rgb(59, 130, 246)'\n  }, {\n    value: 'gpu_usage',\n    label: 'GPU Usage',\n    color: 'rgb(147, 51, 234)'\n  }, {\n    value: 'memory_usage',\n    label: 'Memory Usage',\n    color: 'rgb(16, 185, 129)'\n  }, {\n    value: 'disk_usage',\n    label: 'Disk Usage',\n    color: 'rgb(245, 158, 11)'\n  }, {\n    value: 'fan_speed',\n    label: 'Fan Speed',\n    color: 'rgb(99, 102, 241)'\n  }];\n  useEffect(() => {\n    loadAvailableDates();\n  }, []);\n  useEffect(() => {\n    if (availableDates && availableDates.dates.length > 0) {\n      const lastDate = availableDates.dates[availableDates.dates.length - 1];\n      const sevenDaysAgo = new Date();\n      sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);\n      const sevenDaysAgoStr = sevenDaysAgo.toISOString().split('T')[0];\n      setSelectedStartDate(sevenDaysAgoStr);\n      setSelectedEndDate(lastDate);\n    }\n  }, [availableDates]);\n  const loadMetrics = useCallback(async () => {\n    if (!selectedStartDate || !selectedEndDate) return;\n    try {\n      setLoadingMetrics(true);\n      const response = await metricsAPI.getTimeSeriesData(selectedStartDate, selectedEndDate, selectedMetricTypes.length > 0 ? selectedMetricTypes : undefined);\n      setMetricsData(response.data.data);\n      setError(null);\n    } catch (err) {\n      setError('Failed to load metrics data');\n      console.error('Error loading metrics:', err);\n    } finally {\n      setLoadingMetrics(false);\n    }\n  }, [selectedStartDate, selectedEndDate, selectedMetricTypes]);\n  useEffect(() => {\n    if (selectedStartDate && selectedEndDate) {\n      loadMetrics();\n    }\n  }, [selectedStartDate, selectedEndDate, selectedMetricTypes, loadMetrics]);\n  const loadAvailableDates = async () => {\n    try {\n      setLoading(true);\n      const response = await metricsAPI.getAvailableDates();\n      setAvailableDates(response.data);\n      setError(null);\n    } catch (err) {\n      setError('Failed to load available dates');\n      console.error('Error loading dates:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleMetricTypeToggle = metricType => {\n    setSelectedMetricTypes(prev => prev.includes(metricType) ? prev.filter(t => t !== metricType) : [...prev, metricType]);\n  };\n  const formatDate = dateStr => {\n    return new Date(dateStr).toLocaleDateString();\n  };\n  const formatTime = timestamp => {\n    return new Date(timestamp).toLocaleTimeString();\n  };\n  const getMetricStats = values => {\n    if (!values || values.length === 0) return {\n      min: 0,\n      max: 0,\n      avg: 0\n    };\n\n    // Safety check: ensure all values are finite numbers\n    const validValues = values.filter(v => typeof v === 'number' && isFinite(v));\n    if (validValues.length === 0) return {\n      min: 0,\n      max: 0,\n      avg: 0\n    };\n    const sum = validValues.reduce((a, b) => a + b, 0);\n    const min = Math.min(...validValues);\n    const max = Math.max(...validValues);\n    return {\n      min: min,\n      max: max,\n      avg: sum / validValues.length\n    };\n  };\n  const getSafeChartData = (values, maxPoints = 100) => {\n    if (!values || values.length === 0) return [];\n\n    // For very large datasets, sample the data to prevent rendering issues\n    if (values.length > maxPoints) {\n      const step = Math.floor(values.length / maxPoints);\n      return values.filter((_, index) => index % step === 0).slice(0, maxPoints);\n    }\n    return values;\n  };\n  const calculateChartHeight = (value, maxValue) => {\n    if (!maxValue || maxValue === 0 || !isFinite(maxValue)) return 2;\n    if (!value || !isFinite(value)) return 2;\n    const height = value / maxValue * 100;\n    return Math.max(Math.min(height, 100), 2); // Clamp between 2% and 100%\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-64\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold text-gray-900\",\n        children: \"Hardware Metrics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-1 text-sm text-gray-500\",\n        children: \"Detailed hardware metrics and time series analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-50 border border-red-200 rounded-md p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-shrink-0\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"h-5 w-5 text-red-400\",\n            viewBox: \"0 0 20 20\",\n            fill: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fillRule: \"evenodd\",\n              d: \"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\",\n              clipRule: \"evenodd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-sm font-medium text-red-800\",\n            children: \"Error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-1 text-sm text-red-700\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this), availableDates && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow rounded-lg p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-medium text-gray-900 mb-4\",\n        children: \"Date Range\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-2\",\n            children: \"Start Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedStartDate,\n            onChange: e => setSelectedStartDate(e.target.value),\n            className: \"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select start date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this), availableDates.dates.map(date => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: date,\n              children: formatDate(date)\n            }, date, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-2\",\n            children: \"End Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedEndDate,\n            onChange: e => setSelectedEndDate(e.target.value),\n            className: \"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select end date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this), availableDates.dates.map(date => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: date,\n              children: formatDate(date)\n            }, date, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-end\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: loadMetrics,\n            disabled: !selectedStartDate || !selectedEndDate || loadingMetrics,\n            className: \"w-full bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\",\n            children: loadingMetrics ? 'Loading...' : 'Load Metrics'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-2 text-sm text-gray-500\",\n        children: [\"Available: \", availableDates.count, \" dates from \", formatDate(availableDates.date_range.start), \" to \", formatDate(availableDates.date_range.end)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow rounded-lg p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-medium text-gray-900 mb-4\",\n        children: \"Metric Types\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 md:grid-cols-4 gap-3\",\n        children: metricTypes.map(metric => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"flex items-center space-x-2 cursor-pointer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedMetricTypes.length === 0 || selectedMetricTypes.includes(metric.value),\n            onChange: () => handleMetricTypeToggle(metric.value),\n            className: \"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-700\",\n            children: metric.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this)]\n        }, metric.value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-2 text-sm text-gray-500\",\n        children: selectedMetricTypes.length === 0 ? 'All metric types selected' : `${selectedMetricTypes.length} metric types selected`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), loadingMetrics && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-32\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }, this), !loadingMetrics && metricsData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-6\",\n      children: metricsData.map((metric, index) => {\n        const stats = getMetricStats(metric.values);\n        const metricType = metricTypes.find(mt => mt.value === metric.metric_type);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white shadow rounded-lg p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-lg font-medium text-gray-900\",\n                children: (metricType === null || metricType === void 0 ? void 0 : metricType.label) || metric.metric_type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-500\",\n                children: [metric.component, \" \\u2022 \", metric.unit, \" \\u2022 \", metric.values.length, \" data points\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-2xl font-bold text-gray-900\",\n                children: [stats.avg.toFixed(1), metric.unit]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-500\",\n                children: [\"Min: \", stats.min.toFixed(1), \" | Max: \", stats.max.toFixed(1)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-32 bg-gray-50 rounded-lg p-4 overflow-hidden\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-end justify-between h-full space-x-1\",\n              children: getSafeChartData(metric.values).map((value, idx) => {\n                const height = calculateChartHeight(value, stats.max);\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex-1 bg-blue-500 rounded-t\",\n                  style: {\n                    height: `${height}%`,\n                    backgroundColor: (metricType === null || metricType === void 0 ? void 0 : metricType.color) || '#3B82F6'\n                  },\n                  title: `${formatTime(metric.timestamps[idx])}: ${value.toFixed(1)}${metric.unit}`\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-sm font-medium text-gray-900 mb-2\",\n              children: \"Recent Data Points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"max-h-40 overflow-y-auto\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"min-w-full divide-y divide-gray-200\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  className: \"bg-gray-50\",\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                      children: \"Time\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 320,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                      children: \"Value\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 321,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  className: \"bg-white divide-y divide-gray-200\",\n                  children: metric.values.slice(0, 10).map((value, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-3 py-2 whitespace-nowrap text-sm text-gray-500\",\n                      children: formatTime(metric.timestamps[idx])\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 327,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-3 py-2 whitespace-nowrap text-sm text-gray-900\",\n                      children: [value.toFixed(2), metric.unit]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 330,\n                      columnNumber: 29\n                    }, this)]\n                  }, idx, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }, this), !loadingMetrics && metricsData.length === 0 && selectedStartDate && selectedEndDate && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow rounded-lg p-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-gray-900 mb-2\",\n          children: \"No Metrics Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500\",\n          children: \"No metrics data found for the selected date range. Try selecting different dates or check if the backend is running.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_s(Metrics, \"vYWPw2NXPPPL7X54nkpO8FURz9Q=\");\n_c = Metrics;\nexport default Metrics;\nvar _c;\n$RefreshReg$(_c, \"Metrics\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","metricsAPI","LoadingSpinner","jsxDEV","_jsxDEV","Metrics","_s","loading","setLoading","error","setError","availableDates","setAvailableDates","selectedStartDate","setSelectedStartDate","selectedEndDate","setSelectedEndDate","metricsData","setMetricsData","selectedMetricTypes","setSelectedMetricTypes","loadingMetrics","setLoadingMetrics","metricTypes","value","label","color","loadAvailableDates","dates","length","lastDate","sevenDaysAgo","Date","setDate","getDate","sevenDaysAgoStr","toISOString","split","loadMetrics","response","getTimeSeriesData","undefined","data","err","console","getAvailableDates","handleMetricTypeToggle","metricType","prev","includes","filter","t","formatDate","dateStr","toLocaleDateString","formatTime","timestamp","toLocaleTimeString","getMetricStats","values","min","max","avg","validValues","v","isFinite","sum","reduce","a","b","Math","getSafeChartData","maxPoints","step","floor","_","index","slice","calculateChartHeight","maxValue","height","className","children","fileName","_jsxFileName","lineNumber","columnNumber","viewBox","fill","fillRule","d","clipRule","onChange","e","target","map","date","onClick","disabled","count","date_range","start","end","metric","type","checked","stats","find","mt","metric_type","component","unit","toFixed","idx","style","backgroundColor","title","timestamps","_c","$RefreshReg$"],"sources":["E:/OHMD/OpenHardwareMonitorDashboard/frontend/src/pages/Metrics.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { metricsAPI } from '../services/api';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\n\r\ninterface MetricData {\r\n  metric_type: string;\r\n  component: string;\r\n  unit: string;\r\n  values: number[];\r\n  timestamps: string[];\r\n}\r\n\r\ninterface AvailableDates {\r\n  dates: string[];\r\n  count: number;\r\n  date_range: {\r\n    start: string;\r\n    end: string;\r\n  };\r\n}\r\n\r\ninterface MetricsResponse {\r\n  data: MetricData[];\r\n  time_range: string;\r\n  total_records: number;\r\n}\r\n\r\nconst Metrics: React.FC = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [availableDates, setAvailableDates] = useState<AvailableDates | null>(null);\r\n  const [selectedStartDate, setSelectedStartDate] = useState<string>('');\r\n  const [selectedEndDate, setSelectedEndDate] = useState<string>('');\r\n  const [metricsData, setMetricsData] = useState<MetricData[]>([]);\r\n  const [selectedMetricTypes, setSelectedMetricTypes] = useState<string[]>([]);\r\n  const [loadingMetrics, setLoadingMetrics] = useState(false);\r\n\r\n  const metricTypes = [\r\n    { value: 'cpu_temperature', label: 'CPU Temperature', color: 'rgb(239, 68, 68)' },\r\n    { value: 'gpu_temperature', label: 'GPU Temperature', color: 'rgb(220, 38, 127)' },\r\n    { value: 'cpu_usage', label: 'CPU Usage', color: 'rgb(59, 130, 246)' },\r\n    { value: 'gpu_usage', label: 'GPU Usage', color: 'rgb(147, 51, 234)' },\r\n    { value: 'memory_usage', label: 'Memory Usage', color: 'rgb(16, 185, 129)' },\r\n    { value: 'disk_usage', label: 'Disk Usage', color: 'rgb(245, 158, 11)' },\r\n    { value: 'fan_speed', label: 'Fan Speed', color: 'rgb(99, 102, 241)' }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    loadAvailableDates();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (availableDates && availableDates.dates.length > 0) {\r\n      const lastDate = availableDates.dates[availableDates.dates.length - 1];\r\n      const sevenDaysAgo = new Date();\r\n      sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);\r\n      const sevenDaysAgoStr = sevenDaysAgo.toISOString().split('T')[0];\r\n      \r\n      setSelectedStartDate(sevenDaysAgoStr);\r\n      setSelectedEndDate(lastDate);\r\n    }\r\n  }, [availableDates]);\r\n\r\n  const loadMetrics = useCallback(async () => {\r\n    if (!selectedStartDate || !selectedEndDate) return;\r\n    \r\n    try {\r\n      setLoadingMetrics(true);\r\n      const response = await metricsAPI.getTimeSeriesData(\r\n        selectedStartDate,\r\n        selectedEndDate,\r\n        selectedMetricTypes.length > 0 ? selectedMetricTypes : undefined\r\n      );\r\n      setMetricsData(response.data.data);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError('Failed to load metrics data');\r\n      console.error('Error loading metrics:', err);\r\n    } finally {\r\n      setLoadingMetrics(false);\r\n    }\r\n  }, [selectedStartDate, selectedEndDate, selectedMetricTypes]);\r\n\r\n  useEffect(() => {\r\n    if (selectedStartDate && selectedEndDate) {\r\n      loadMetrics();\r\n    }\r\n  }, [selectedStartDate, selectedEndDate, selectedMetricTypes, loadMetrics]);\r\n\r\n  const loadAvailableDates = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await metricsAPI.getAvailableDates();\r\n      setAvailableDates(response.data);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError('Failed to load available dates');\r\n      console.error('Error loading dates:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleMetricTypeToggle = (metricType: string) => {\r\n    setSelectedMetricTypes(prev => \r\n      prev.includes(metricType) \r\n        ? prev.filter(t => t !== metricType)\r\n        : [...prev, metricType]\r\n    );\r\n  };\r\n\r\n  const formatDate = (dateStr: string) => {\r\n    return new Date(dateStr).toLocaleDateString();\r\n  };\r\n\r\n  const formatTime = (timestamp: string) => {\r\n    return new Date(timestamp).toLocaleTimeString();\r\n  };\r\n\r\n  const getMetricStats = (values: number[]) => {\r\n    if (!values || values.length === 0) return { min: 0, max: 0, avg: 0 };\r\n    \r\n    // Safety check: ensure all values are finite numbers\r\n    const validValues = values.filter(v => typeof v === 'number' && isFinite(v));\r\n    if (validValues.length === 0) return { min: 0, max: 0, avg: 0 };\r\n    \r\n    const sum = validValues.reduce((a, b) => a + b, 0);\r\n    const min = Math.min(...validValues);\r\n    const max = Math.max(...validValues);\r\n    \r\n    return {\r\n      min: min,\r\n      max: max,\r\n      avg: sum / validValues.length\r\n    };\r\n  };\r\n\r\n  const getSafeChartData = (values: number[], maxPoints: number = 100) => {\r\n    if (!values || values.length === 0) return [];\r\n    \r\n    // For very large datasets, sample the data to prevent rendering issues\r\n    if (values.length > maxPoints) {\r\n      const step = Math.floor(values.length / maxPoints);\r\n      return values.filter((_, index) => index % step === 0).slice(0, maxPoints);\r\n    }\r\n    \r\n    return values;\r\n  };\r\n\r\n  const calculateChartHeight = (value: number, maxValue: number) => {\r\n    if (!maxValue || maxValue === 0 || !isFinite(maxValue)) return 2;\r\n    if (!value || !isFinite(value)) return 2;\r\n    \r\n    const height = (value / maxValue) * 100;\r\n    return Math.max(Math.min(height, 100), 2); // Clamp between 2% and 100%\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-64\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div>\r\n        <h1 className=\"text-2xl font-bold text-gray-900\">Hardware Metrics</h1>\r\n        <p className=\"mt-1 text-sm text-gray-500\">\r\n          Detailed hardware metrics and time series analysis\r\n        </p>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\r\n          <div className=\"flex\">\r\n            <div className=\"flex-shrink-0\">\r\n              <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\r\n              </svg>\r\n            </div>\r\n            <div className=\"ml-3\">\r\n              <h3 className=\"text-sm font-medium text-red-800\">Error</h3>\r\n              <p className=\"mt-1 text-sm text-red-700\">{error}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Date Selection */}\r\n      {availableDates && (\r\n        <div className=\"bg-white shadow rounded-lg p-6\">\r\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Date Range</h3>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Start Date</label>\r\n              <select\r\n                value={selectedStartDate}\r\n                onChange={(e) => setSelectedStartDate(e.target.value)}\r\n                className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              >\r\n                <option value=\"\">Select start date</option>\r\n                {availableDates.dates.map(date => (\r\n                  <option key={date} value={date}>{formatDate(date)}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">End Date</label>\r\n              <select\r\n                value={selectedEndDate}\r\n                onChange={(e) => setSelectedEndDate(e.target.value)}\r\n                className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              >\r\n                <option value=\"\">Select end date</option>\r\n                {availableDates.dates.map(date => (\r\n                  <option key={date} value={date}>{formatDate(date)}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"flex items-end\">\r\n              <button\r\n                onClick={loadMetrics}\r\n                disabled={!selectedStartDate || !selectedEndDate || loadingMetrics}\r\n                className=\"w-full bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                {loadingMetrics ? 'Loading...' : 'Load Metrics'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <p className=\"mt-2 text-sm text-gray-500\">\r\n            Available: {availableDates.count} dates from {formatDate(availableDates.date_range.start)} to {formatDate(availableDates.date_range.end)}\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Metric Type Selection */}\r\n      <div className=\"bg-white shadow rounded-lg p-6\">\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Metric Types</h3>\r\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-3\">\r\n          {metricTypes.map(metric => (\r\n            <label key={metric.value} className=\"flex items-center space-x-2 cursor-pointer\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={selectedMetricTypes.length === 0 || selectedMetricTypes.includes(metric.value)}\r\n                onChange={() => handleMetricTypeToggle(metric.value)}\r\n                className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\r\n              />\r\n              <span className=\"text-sm text-gray-700\">{metric.label}</span>\r\n            </label>\r\n          ))}\r\n        </div>\r\n        <p className=\"mt-2 text-sm text-gray-500\">\r\n          {selectedMetricTypes.length === 0 ? 'All metric types selected' : `${selectedMetricTypes.length} metric types selected`}\r\n        </p>\r\n      </div>\r\n\r\n      {/* Metrics Display */}\r\n      {loadingMetrics && (\r\n        <div className=\"flex items-center justify-center h-32\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n\r\n      {!loadingMetrics && metricsData.length > 0 && (\r\n        <div className=\"space-y-6\">\r\n          {metricsData.map((metric, index) => {\r\n            const stats = getMetricStats(metric.values);\r\n            const metricType = metricTypes.find(mt => mt.value === metric.metric_type);\r\n            \r\n            return (\r\n              <div key={index} className=\"bg-white shadow rounded-lg p-6\">\r\n                <div className=\"flex items-center justify-between mb-4\">\r\n                  <div>\r\n                    <h3 className=\"text-lg font-medium text-gray-900\">\r\n                      {metricType?.label || metric.metric_type}\r\n                    </h3>\r\n                    <p className=\"text-sm text-gray-500\">\r\n                      {metric.component} • {metric.unit} • {metric.values.length} data points\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"text-right\">\r\n                    <div className=\"text-2xl font-bold text-gray-900\">\r\n                      {stats.avg.toFixed(1)}{metric.unit}\r\n                    </div>\r\n                    <div className=\"text-sm text-gray-500\">\r\n                      Min: {stats.min.toFixed(1)} | Max: {stats.max.toFixed(1)}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Simple Chart Visualization */}\r\n                <div className=\"h-32 bg-gray-50 rounded-lg p-4 overflow-hidden\">\r\n                  <div className=\"flex items-end justify-between h-full space-x-1\">\r\n                    {getSafeChartData(metric.values).map((value, idx) => {\r\n                      const height = calculateChartHeight(value, stats.max);\r\n                      return (\r\n                        <div\r\n                          key={idx}\r\n                          className=\"flex-1 bg-blue-500 rounded-t\"\r\n                          style={{\r\n                            height: `${height}%`,\r\n                            backgroundColor: metricType?.color || '#3B82F6'\r\n                          }}\r\n                          title={`${formatTime(metric.timestamps[idx])}: ${value.toFixed(1)}${metric.unit}`}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Data Table */}\r\n                <div className=\"mt-4\">\r\n                  <h4 className=\"text-sm font-medium text-gray-900 mb-2\">Recent Data Points</h4>\r\n                  <div className=\"max-h-40 overflow-y-auto\">\r\n                    <table className=\"min-w-full divide-y divide-gray-200\">\r\n                      <thead className=\"bg-gray-50\">\r\n                        <tr>\r\n                          <th className=\"px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Time</th>\r\n                          <th className=\"px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Value</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                        {metric.values.slice(0, 10).map((value, idx) => (\r\n                          <tr key={idx}>\r\n                            <td className=\"px-3 py-2 whitespace-nowrap text-sm text-gray-500\">\r\n                              {formatTime(metric.timestamps[idx])}\r\n                            </td>\r\n                            <td className=\"px-3 py-2 whitespace-nowrap text-sm text-gray-900\">\r\n                              {value.toFixed(2)}{metric.unit}\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n\r\n      {!loadingMetrics && metricsData.length === 0 && selectedStartDate && selectedEndDate && (\r\n        <div className=\"bg-white shadow rounded-lg p-6\">\r\n          <div className=\"text-center py-12\">\r\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No Metrics Data</h3>\r\n            <p className=\"text-gray-500\">\r\n              No metrics data found for the selected date range. Try selecting different dates or check if the backend is running.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Metrics;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}