{"ast":null,"code":"var _jsxFileName = \"E:\\\\OHMD\\\\OpenHardwareMonitorDashboard\\\\frontend\\\\src\\\\pages\\\\Metrics.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { metricsAPI } from '../services/api';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement, RadialLinearScale, Filler } from 'chart.js';\nimport { Line, Pie, Scatter, Doughnut } from 'react-chartjs-2';\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement, RadialLinearScale, Filler);\nconst Metrics = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [availableDates, setAvailableDates] = useState(null);\n  const [selectedStartDate, setSelectedStartDate] = useState('');\n  const [selectedEndDate, setSelectedEndDate] = useState('');\n  const [metricsData, setMetricsData] = useState([]);\n  const [selectedMetricTypes, setSelectedMetricTypes] = useState([]);\n  const [loadingMetrics, setLoadingMetrics] = useState(false);\n  const [selectedChartType, setSelectedChartType] = useState('line');\n  const [chartOptions, setChartOptions] = useState({});\n  const metricTypes = [{\n    value: 'cpu_temperature',\n    label: 'CPU Temperature',\n    color: 'rgb(239, 68, 68)'\n  }, {\n    value: 'gpu_temperature',\n    label: 'GPU Temperature',\n    color: 'rgb(220, 38, 127)'\n  }, {\n    value: 'cpu_usage',\n    label: 'CPU Usage',\n    color: 'rgb(59, 130, 246)'\n  }, {\n    value: 'gpu_usage',\n    label: 'GPU Usage',\n    color: 'rgb(147, 51, 234)'\n  }, {\n    value: 'memory_usage',\n    label: 'Memory Usage',\n    color: 'rgb(16, 185, 129)'\n  }, {\n    value: 'disk_usage',\n    label: 'Disk Usage',\n    color: 'rgb(245, 158, 11)'\n  }, {\n    value: 'fan_speed',\n    label: 'Fan Speed',\n    color: 'rgb(99, 102, 241)'\n  }];\n  useEffect(() => {\n    loadAvailableDates();\n  }, []);\n  useEffect(() => {\n    if (availableDates && availableDates.dates.length > 0) {\n      const lastDate = availableDates.dates[availableDates.dates.length - 1];\n      const sevenDaysAgo = new Date();\n      sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);\n      const sevenDaysAgoStr = sevenDaysAgo.toISOString().split('T')[0];\n      setSelectedStartDate(sevenDaysAgoStr);\n      setSelectedEndDate(lastDate);\n    }\n  }, [availableDates]);\n  const loadMetrics = useCallback(async () => {\n    if (!selectedStartDate || !selectedEndDate) return;\n    try {\n      setLoadingMetrics(true);\n      console.log(`Loading metrics for ${selectedStartDate} to ${selectedEndDate} with types:`, selectedMetricTypes);\n      const response = await metricsAPI.getTimeSeriesData(selectedStartDate, selectedEndDate, selectedMetricTypes.length > 0 ? selectedMetricTypes : undefined);\n      console.log('Metrics response:', response.data);\n\n      // Filter the data based on selected metric types if any are selected\n      let filteredData = response.data.data || [];\n      if (selectedMetricTypes.length > 0) {\n        filteredData = filteredData.filter(metric => selectedMetricTypes.includes(metric.metric_type));\n        console.log(`Filtered to ${filteredData.length} metrics:`, filteredData.map(m => m.metric_type));\n      }\n      setMetricsData(filteredData);\n      setError(null);\n    } catch (err) {\n      setError('Failed to load metrics data');\n      console.error('Error loading metrics:', err);\n    } finally {\n      setLoadingMetrics(false);\n    }\n  }, [selectedStartDate, selectedEndDate, selectedMetricTypes]);\n  useEffect(() => {\n    if (selectedStartDate && selectedEndDate) {\n      loadMetrics();\n    }\n  }, [selectedStartDate, selectedEndDate, selectedMetricTypes, loadMetrics]);\n  const loadAvailableDates = async () => {\n    try {\n      setLoading(true);\n      const response = await metricsAPI.getAvailableDates();\n      setAvailableDates(response.data);\n      setError(null);\n    } catch (err) {\n      setError('Failed to load available dates');\n      console.error('Error loading dates:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleMetricTypeToggle = metricType => {\n    setSelectedMetricTypes(prev => prev.includes(metricType) ? prev.filter(t => t !== metricType) : [...prev, metricType]);\n  };\n  const formatDate = dateStr => {\n    return new Date(dateStr).toLocaleDateString();\n  };\n  const formatTime = timestamp => {\n    return new Date(timestamp).toLocaleTimeString();\n  };\n  const getMetricStats = values => {\n    try {\n      // Deep safety check - ensure we have a valid array\n      if (!Array.isArray(values)) {\n        console.warn('getMetricStats: values is not an array:', typeof values, values);\n        return {\n          min: 0,\n          max: 0,\n          avg: 0\n        };\n      }\n      if (values.length === 0) {\n        return {\n          min: 0,\n          max: 0,\n          avg: 0\n        };\n      }\n\n      // Check for circular references by limiting depth\n      const maxDepth = 10;\n      let depth = 0;\n      const flattenValues = (arr, currentDepth = 0) => {\n        if (currentDepth > maxDepth) {\n          console.warn('getMetricStats: Maximum depth exceeded, truncating data');\n          return [];\n        }\n        const result = [];\n        for (let i = 0; i < Math.min(arr.length, 1000); i++) {\n          // Limit array size\n          const item = arr[i];\n          if (typeof item === 'number' && isFinite(item)) {\n            result.push(item);\n          } else if (Array.isArray(item)) {\n            result.push(...flattenValues(item, currentDepth + 1));\n          }\n        }\n        return result;\n      };\n      const validValues = flattenValues(values);\n      if (validValues.length === 0) {\n        console.warn('getMetricStats: No valid numeric values found');\n        return {\n          min: 0,\n          max: 0,\n          avg: 0\n        };\n      }\n\n      // Use safer math operations\n      const sum = validValues.reduce((a, b) => a + b, 0);\n      const min = Math.min(...validValues);\n      const max = Math.max(...validValues);\n      return {\n        min: isFinite(min) ? min : 0,\n        max: isFinite(max) ? max : 1,\n        // Ensure max is never 0\n        avg: isFinite(sum / validValues.length) ? sum / validValues.length : 0\n      };\n    } catch (error) {\n      console.error('getMetricStats error:', error);\n      return {\n        min: 0,\n        max: 1,\n        avg: 0\n      };\n    }\n  };\n  const getSafeChartData = (values, maxPoints = 100) => {\n    try {\n      if (!Array.isArray(values)) return [];\n      if (values.length === 0) return [];\n\n      // For very large datasets, sample the data to prevent rendering issues\n      if (values.length > maxPoints) {\n        const step = Math.floor(values.length / maxPoints);\n        const sampled = values.filter((_, index) => index % step === 0).slice(0, maxPoints);\n        return sampled.filter(v => typeof v === 'number' && isFinite(v));\n      }\n      return values.filter(v => typeof v === 'number' && isFinite(v));\n    } catch (error) {\n      console.error('getSafeChartData error:', error);\n      return [];\n    }\n  };\n  const calculateChartHeight = (value, maxValue) => {\n    try {\n      if (!maxValue || maxValue === 0 || !isFinite(maxValue)) return 2;\n      if (!value || !isFinite(value)) return 2;\n      const height = value / maxValue * 100;\n      return Math.max(Math.min(height, 100), 2); // Clamp between 2% and 100%\n    } catch (error) {\n      console.error('calculateChartHeight error:', error);\n      return 2;\n    }\n  };\n  const getChartData = (metric, chartType) => {\n    try {\n      if (!metric || !Array.isArray(metric.values)) return null;\n      const values = getSafeChartData(metric.values, 100);\n      const timestamps = metric.timestamps ? metric.timestamps.slice(0, values.length) : [];\n      const colors = ['rgba(59, 130, 246, 0.8)',\n      // Blue\n      'rgba(147, 51, 234, 0.8)',\n      // Purple\n      'rgba(16, 185, 129, 0.8)',\n      // Green\n      'rgba(245, 158, 11, 0.8)',\n      // Yellow\n      'rgba(239, 68, 68, 0.8)',\n      // Red\n      'rgba(99, 102, 241, 0.8)',\n      // Indigo\n      'rgba(220, 38, 127, 0.8)' // Pink\n      ];\n      const metricType = metricTypes.find(mt => mt.value === metric.metric_type);\n      const color = (metricType === null || metricType === void 0 ? void 0 : metricType.color) || colors[0];\n      switch (chartType) {\n        case 'line':\n          return {\n            labels: timestamps.length > 0 ? timestamps.map((_, i) => `Point ${i + 1}`) : values.map((_, i) => `Point ${i + 1}`),\n            datasets: [{\n              label: (metricType === null || metricType === void 0 ? void 0 : metricType.label) || metric.metric_type,\n              data: values,\n              borderColor: color,\n              backgroundColor: color.replace('0.8', '0.1'),\n              borderWidth: 2,\n              fill: true,\n              tension: 0.4,\n              pointRadius: 3,\n              pointHoverRadius: 6\n            }]\n          };\n        case 'pie':\n          // For pie charts, we'll show the distribution of values in ranges\n          const ranges = [0, 25, 50, 75, 100];\n          const rangeLabels = ['0-25%', '25-50%', '50-75%', '75-100%'];\n          const rangeCounts = ranges.slice(0, -1).map((start, i) => {\n            const end = ranges[i + 1];\n            return values.filter(v => v >= start && v < end).length;\n          });\n          return {\n            labels: rangeLabels,\n            datasets: [{\n              data: rangeCounts,\n              backgroundColor: colors.slice(0, rangeCounts.length),\n              borderColor: colors.slice(0, rangeCounts.length).map(c => c.replace('0.8', '1')),\n              borderWidth: 2\n            }]\n          };\n        case 'scatter':\n          return {\n            datasets: [{\n              label: (metricType === null || metricType === void 0 ? void 0 : metricType.label) || metric.metric_type,\n              data: values.map((value, index) => ({\n                x: index,\n                y: value\n              })),\n              backgroundColor: color,\n              borderColor: color.replace('0.8', '1'),\n              pointRadius: 4,\n              pointHoverRadius: 8\n            }]\n          };\n        case 'doughnut':\n          // For doughnut charts, show min, max, and average\n          const stats = getMetricStats(metric.values);\n          return {\n            labels: ['Min', 'Average', 'Max'],\n            datasets: [{\n              data: [stats.min, stats.avg, stats.max],\n              backgroundColor: [colors[0], colors[1], colors[2]],\n              borderColor: [colors[0], colors[1], colors[2]].map(c => c.replace('0.8', '1')),\n              borderWidth: 2\n            }]\n          };\n        default:\n          return null;\n      }\n    } catch (error) {\n      console.error('getChartData error:', error);\n      return null;\n    }\n  };\n  const getChartOptions = (chartType, metric) => {\n    const baseOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          position: 'top',\n          labels: {\n            usePointStyle: true,\n            padding: 20,\n            font: {\n              size: 12,\n              weight: '600'\n            }\n          }\n        },\n        tooltip: {\n          mode: 'index',\n          intersect: false,\n          backgroundColor: 'rgba(0, 0, 0, 0.8)',\n          titleColor: 'white',\n          bodyColor: 'white',\n          borderColor: 'rgba(255, 255, 255, 0.2)',\n          borderWidth: 1,\n          cornerRadius: 8,\n          displayColors: true\n        }\n      },\n      interaction: {\n        mode: 'nearest',\n        axis: 'x',\n        intersect: false\n      }\n    };\n    switch (chartType) {\n      case 'line':\n        return {\n          ...baseOptions,\n          scales: {\n            x: {\n              display: true,\n              title: {\n                display: true,\n                text: 'Data Points',\n                font: {\n                  weight: '600'\n                }\n              },\n              grid: {\n                color: 'rgba(0, 0, 0, 0.1)',\n                drawBorder: false\n              }\n            },\n            y: {\n              display: true,\n              title: {\n                display: true,\n                text: metric.unit || 'Value',\n                font: {\n                  weight: '600'\n                }\n              },\n              grid: {\n                color: 'rgba(0, 0, 0, 0.1)',\n                drawBorder: false\n              }\n            }\n          }\n        };\n      case 'scatter':\n        return {\n          ...baseOptions,\n          scales: {\n            x: {\n              display: true,\n              title: {\n                display: true,\n                text: 'Data Point Index',\n                font: {\n                  weight: '600'\n                }\n              },\n              grid: {\n                color: 'rgba(0, 0, 0, 0.1)',\n                drawBorder: false\n              }\n            },\n            y: {\n              display: true,\n              title: {\n                display: true,\n                text: metric.unit || 'Value',\n                font: {\n                  weight: '600'\n                }\n              },\n              grid: {\n                color: 'rgba(0, 0, 0, 0.1)',\n                drawBorder: false\n              }\n            }\n          }\n        };\n      case 'pie':\n      case 'doughnut':\n        return {\n          ...baseOptions,\n          plugins: {\n            ...baseOptions.plugins,\n            tooltip: {\n              ...baseOptions.plugins.tooltip,\n              callbacks: {\n                label: function (context) {\n                  const label = context.label || '';\n                  const value = context.parsed || context.raw;\n                  const unit = metric.unit || '';\n                  return `${label}: ${value.toFixed(2)}${unit}`;\n                }\n              }\n            }\n          }\n        };\n      default:\n        return baseOptions;\n    }\n  };\n  const renderMetricCard = (metric, index) => {\n    try {\n      // Validate metric structure\n      if (!metric || typeof metric !== 'object') {\n        console.warn('Invalid metric object:', metric);\n        return null;\n      }\n      if (!Array.isArray(metric.values)) {\n        console.warn('Metric values is not an array:', metric.values);\n        return null;\n      }\n      const stats = getMetricStats(metric.values);\n      const metricType = metricTypes.find(mt => mt.value === metric.metric_type);\n      const isLargeDataset = metric.values.length > 1000;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow rounded-lg p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-medium text-gray-900\",\n              children: (metricType === null || metricType === void 0 ? void 0 : metricType.label) || metric.metric_type || 'Unknown Metric'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-500\",\n              children: [metric.component || 'Unknown', \" \\u2022 \", metric.unit || '', \" \\u2022 \", metric.values.length.toLocaleString(), \" data points\", isLargeDataset && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2 text-yellow-600 font-medium\",\n                children: \"(Large dataset - chart sampled)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-2xl font-bold text-gray-900\",\n              children: [stats.avg.toFixed(1), metric.unit || '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-500\",\n              children: [\"Min: \", stats.min.toFixed(1), \" | Max: \", stats.max.toFixed(1)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-64 bg-gray-50 rounded-lg p-4 overflow-hidden\",\n          children: (() => {\n            const chartData = getChartData(metric, selectedChartType);\n            const chartOptions = getChartOptions(selectedChartType, metric);\n            if (!chartData) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-center h-full text-gray-500\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-2xl mb-2\",\n                    children: \"\\uD83D\\uDCCA\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 523,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm\",\n                    children: \"Chart data unavailable\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 524,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 522,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 19\n              }, this);\n            }\n            try {\n              switch (selectedChartType) {\n                case 'line':\n                  return /*#__PURE__*/_jsxDEV(Line, {\n                    data: chartData,\n                    options: chartOptions\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 533,\n                    columnNumber: 28\n                  }, this);\n                case 'scatter':\n                  return /*#__PURE__*/_jsxDEV(Scatter, {\n                    data: chartData,\n                    options: chartOptions\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 535,\n                    columnNumber: 28\n                  }, this);\n                case 'pie':\n                  return /*#__PURE__*/_jsxDEV(Pie, {\n                    data: chartData,\n                    options: chartOptions\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 537,\n                    columnNumber: 28\n                  }, this);\n                case 'doughnut':\n                  return /*#__PURE__*/_jsxDEV(Doughnut, {\n                    data: chartData,\n                    options: chartOptions\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 539,\n                    columnNumber: 28\n                  }, this);\n                default:\n                  return /*#__PURE__*/_jsxDEV(Line, {\n                    data: chartData,\n                    options: chartOptions\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 541,\n                    columnNumber: 28\n                  }, this);\n              }\n            } catch (error) {\n              console.error('Chart rendering error:', error);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-center h-full text-red-500\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-2xl mb-2\",\n                    children: \"\\u274C\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 548,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm\",\n                    children: \"Chart rendering failed\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 549,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 547,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 19\n              }, this);\n            }\n          })()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-sm font-medium text-gray-900 mb-2\",\n            children: [\"Recent Data Points \", isLargeDataset && `(showing first 10 of ${metric.values.length.toLocaleString()})`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"max-h-40 overflow-y-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"min-w-full divide-y divide-gray-200\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                className: \"bg-gray-50\",\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                    children: \"Index\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 566,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                    children: \"Value\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 567,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 565,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                className: \"bg-white divide-y divide-gray-200\",\n                children: metric.values.slice(0, 10).map((value, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-3 py-2 whitespace-nowrap text-sm text-gray-500\",\n                    children: idx\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 573,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-3 py-2 whitespace-nowrap text-sm text-gray-900\",\n                    children: [typeof value === 'number' ? value.toFixed(2) : String(value), metric.unit || '']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 576,\n                    columnNumber: 23\n                  }, this)]\n                }, idx, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 572,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }, this);\n    } catch (error) {\n      console.error('Error rendering metric card:', error);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-50 border border-red-200 rounded-md p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-red-800\",\n          children: \"Error Rendering Metric\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-700\",\n          children: \"Failed to render metric data. Check console for details.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-64\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold text-gray-900\",\n        children: \"Hardware Metrics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-1 text-sm text-gray-500\",\n        children: \"Detailed hardware metrics and time series analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-50 border border-red-200 rounded-md p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-shrink-0\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"h-5 w-5 text-red-400\",\n            viewBox: \"0 0 20 20\",\n            fill: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fillRule: \"evenodd\",\n              d: \"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\",\n              clipRule: \"evenodd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-sm font-medium text-red-800\",\n            children: \"Error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-1 text-sm text-red-700\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 9\n    }, this), availableDates && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow rounded-lg p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-medium text-gray-900 mb-4\",\n        children: \"Date Range\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-2\",\n            children: \"Start Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedStartDate,\n            onChange: e => setSelectedStartDate(e.target.value),\n            className: \"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select start date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 17\n            }, this), availableDates.dates.map(date => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: date,\n              children: formatDate(date)\n            }, date, false, {\n              fileName: _jsxFileName,\n              lineNumber: 645,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-2\",\n            children: \"End Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedEndDate,\n            onChange: e => setSelectedEndDate(e.target.value),\n            className: \"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select end date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 17\n            }, this), availableDates.dates.map(date => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: date,\n              children: formatDate(date)\n            }, date, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-end\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: loadMetrics,\n            disabled: !selectedStartDate || !selectedEndDate || loadingMetrics,\n            className: \"w-full bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\",\n            children: loadingMetrics ? 'Loading...' : 'Load Metrics'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-2 text-sm text-gray-500\",\n        children: [\"Available: \", availableDates.count, \" dates from \", formatDate(availableDates.date_range.start), \" to \", formatDate(availableDates.date_range.end)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow rounded-lg p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-medium text-gray-900 mb-4\",\n        children: \"Chart Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 md:grid-cols-4 gap-3\",\n        children: [{\n          value: 'line',\n          label: 'Line Chart',\n          icon: '📈',\n          description: 'Time series trends'\n        }, {\n          value: 'scatter',\n          label: 'Scatter Plot',\n          icon: '🔵',\n          description: 'Data point distribution'\n        }, {\n          value: 'pie',\n          label: 'Pie Chart',\n          icon: '🥧',\n          description: 'Value range distribution'\n        }, {\n          value: 'doughnut',\n          label: 'Doughnut Chart',\n          icon: '🍩',\n          description: 'Min/Avg/Max summary'\n        }].map(chartType => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"flex flex-col items-center space-y-2 cursor-pointer p-3 border-2 rounded-lg hover:bg-gray-50 transition-colors\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"chartType\",\n            value: chartType.value,\n            checked: selectedChartType === chartType.value,\n            onChange: e => setSelectedChartType(e.target.value),\n            className: \"sr-only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 689,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `text-2xl ${selectedChartType === chartType.value ? 'scale-110' : ''} transition-transform`,\n            children: chartType.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `font-medium text-sm ${selectedChartType === chartType.value ? 'text-blue-600' : 'text-gray-700'}`,\n              children: chartType.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 701,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-500 mt-1\",\n              children: chartType.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 15\n          }, this), selectedChartType === chartType.value && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-2 h-2 bg-blue-600 rounded-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 17\n          }, this)]\n        }, chartType.value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-3 text-sm text-gray-500 text-center\",\n        children: \"Select a chart type to visualize your metrics data. Each chart type offers different insights into your hardware performance.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow rounded-lg p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-medium text-gray-900 mb-4\",\n        children: \"Metric Types\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 721,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 md:grid-cols-4 gap-3\",\n        children: metricTypes.map(metric => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"flex items-center space-x-2 cursor-pointer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedMetricTypes.length === 0 || selectedMetricTypes.includes(metric.value),\n            onChange: () => handleMetricTypeToggle(metric.value),\n            className: \"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 725,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `text-sm ${selectedMetricTypes.length > 0 && !selectedMetricTypes.includes(metric.value) ? 'text-gray-400' : 'text-gray-700'}`,\n            children: metric.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 15\n          }, this)]\n        }, metric.value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 722,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 flex items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500\",\n          children: selectedMetricTypes.length === 0 ? 'All metric types selected' : `${selectedMetricTypes.length} metric types selected`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 11\n        }, this), selectedMetricTypes.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedMetricTypes([]),\n          className: \"text-sm text-blue-600 hover:text-blue-800 underline\",\n          children: \"Show All Types\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 737,\n        columnNumber: 9\n      }, this), selectedMetricTypes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 p-2 bg-blue-50 border border-blue-200 rounded-md\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-blue-700\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Filtering Active:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 15\n          }, this), \" Only showing \", selectedMetricTypes.join(', '), \" metrics. Data will reload automatically when you change the selection.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 720,\n      columnNumber: 7\n    }, this), loadingMetrics && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-32\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 763,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 762,\n      columnNumber: 9\n    }, this), !loadingMetrics && metricsData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-6\",\n      children: [metricsData.some(metric => metric.values.length > 1000) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-yellow-50 border border-yellow-200 rounded-md p-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-shrink-0\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"h-5 w-5 text-yellow-400\",\n              viewBox: \"0 0 20 20\",\n              fill: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                fillRule: \"evenodd\",\n                d: \"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\",\n                clipRule: \"evenodd\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 775,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 774,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 773,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ml-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-sm font-medium text-yellow-800\",\n              children: \"Large Dataset Detected\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 779,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-1 text-sm text-yellow-700\",\n              children: \"Some metrics contain large amounts of data. Charts are automatically sampled to prevent performance issues. Full data is available in the data table below.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 780,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 778,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 771,\n        columnNumber: 13\n      }, this), metricsData.map((metric, index) => renderMetricCard(metric, index))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 768,\n      columnNumber: 9\n    }, this), !loadingMetrics && metricsData.length === 0 && selectedStartDate && selectedEndDate && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow rounded-lg p-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-gray-900 mb-2\",\n          children: \"No Metrics Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500\",\n          children: \"No metrics data found for the selected date range. Try selecting different dates or check if the backend is running.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 797,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 795,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 794,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 607,\n    columnNumber: 5\n  }, this);\n};\n_s(Metrics, \"TSQn/ald3wXRInff6FGaO+RlyKI=\");\n_c = Metrics;\nexport default Metrics;\nvar _c;\n$RefreshReg$(_c, \"Metrics\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","metricsAPI","LoadingSpinner","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","ArcElement","RadialLinearScale","Filler","Line","Pie","Scatter","Doughnut","jsxDEV","_jsxDEV","register","Metrics","_s","loading","setLoading","error","setError","availableDates","setAvailableDates","selectedStartDate","setSelectedStartDate","selectedEndDate","setSelectedEndDate","metricsData","setMetricsData","selectedMetricTypes","setSelectedMetricTypes","loadingMetrics","setLoadingMetrics","selectedChartType","setSelectedChartType","chartOptions","setChartOptions","metricTypes","value","label","color","loadAvailableDates","dates","length","lastDate","sevenDaysAgo","Date","setDate","getDate","sevenDaysAgoStr","toISOString","split","loadMetrics","console","log","response","getTimeSeriesData","undefined","data","filteredData","filter","metric","includes","metric_type","map","m","err","getAvailableDates","handleMetricTypeToggle","metricType","prev","t","formatDate","dateStr","toLocaleDateString","formatTime","timestamp","toLocaleTimeString","getMetricStats","values","Array","isArray","warn","min","max","avg","maxDepth","depth","flattenValues","arr","currentDepth","result","i","Math","item","isFinite","push","validValues","sum","reduce","a","b","getSafeChartData","maxPoints","step","floor","sampled","_","index","slice","v","calculateChartHeight","maxValue","height","getChartData","chartType","timestamps","colors","find","mt","labels","datasets","borderColor","backgroundColor","replace","borderWidth","fill","tension","pointRadius","pointHoverRadius","ranges","rangeLabels","rangeCounts","start","end","c","x","y","stats","getChartOptions","baseOptions","responsive","maintainAspectRatio","plugins","legend","position","usePointStyle","padding","font","size","weight","tooltip","mode","intersect","titleColor","bodyColor","cornerRadius","displayColors","interaction","axis","scales","display","title","text","grid","drawBorder","unit","callbacks","context","parsed","raw","toFixed","renderMetricCard","isLargeDataset","className","children","fileName","_jsxFileName","lineNumber","columnNumber","component","toLocaleString","chartData","options","idx","String","viewBox","fillRule","d","clipRule","onChange","e","target","date","onClick","disabled","count","date_range","icon","description","type","name","checked","join","some","_c","$RefreshReg$"],"sources":["E:/OHMD/OpenHardwareMonitorDashboard/frontend/src/pages/Metrics.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { metricsAPI } from '../services/api';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ArcElement,\r\n  RadialLinearScale,\r\n  Filler\r\n} from 'chart.js';\r\nimport { Line, Pie, Scatter, Doughnut } from 'react-chartjs-2';\r\n\r\n// Register Chart.js components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ArcElement,\r\n  RadialLinearScale,\r\n  Filler\r\n);\r\n\r\ninterface MetricData {\r\n  metric_type: string;\r\n  component: string;\r\n  unit: string;\r\n  values: number[];\r\n  timestamps: string[];\r\n}\r\n\r\ninterface AvailableDates {\r\n  dates: string[];\r\n  count: number;\r\n  date_range: {\r\n    start: string;\r\n    end: string;\r\n  };\r\n}\r\n\r\ninterface MetricsResponse {\r\n  data: MetricData[];\r\n  time_range: string;\r\n  total_records: number;\r\n}\r\n\r\nconst Metrics: React.FC = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [availableDates, setAvailableDates] = useState<AvailableDates | null>(null);\r\n  const [selectedStartDate, setSelectedStartDate] = useState<string>('');\r\n  const [selectedEndDate, setSelectedEndDate] = useState<string>('');\r\n  const [metricsData, setMetricsData] = useState<MetricData[]>([]);\r\n  const [selectedMetricTypes, setSelectedMetricTypes] = useState<string[]>([]);\r\n  const [loadingMetrics, setLoadingMetrics] = useState(false);\r\n  const [selectedChartType, setSelectedChartType] = useState<string>('line');\r\n  const [chartOptions, setChartOptions] = useState<any>({});\r\n\r\n  const metricTypes = [\r\n    { value: 'cpu_temperature', label: 'CPU Temperature', color: 'rgb(239, 68, 68)' },\r\n    { value: 'gpu_temperature', label: 'GPU Temperature', color: 'rgb(220, 38, 127)' },\r\n    { value: 'cpu_usage', label: 'CPU Usage', color: 'rgb(59, 130, 246)' },\r\n    { value: 'gpu_usage', label: 'GPU Usage', color: 'rgb(147, 51, 234)' },\r\n    { value: 'memory_usage', label: 'Memory Usage', color: 'rgb(16, 185, 129)' },\r\n    { value: 'disk_usage', label: 'Disk Usage', color: 'rgb(245, 158, 11)' },\r\n    { value: 'fan_speed', label: 'Fan Speed', color: 'rgb(99, 102, 241)' }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    loadAvailableDates();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (availableDates && availableDates.dates.length > 0) {\r\n      const lastDate = availableDates.dates[availableDates.dates.length - 1];\r\n      const sevenDaysAgo = new Date();\r\n      sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);\r\n      const sevenDaysAgoStr = sevenDaysAgo.toISOString().split('T')[0];\r\n      \r\n      setSelectedStartDate(sevenDaysAgoStr);\r\n      setSelectedEndDate(lastDate);\r\n    }\r\n  }, [availableDates]);\r\n\r\n  const loadMetrics = useCallback(async () => {\r\n    if (!selectedStartDate || !selectedEndDate) return;\r\n    \r\n    try {\r\n      setLoadingMetrics(true);\r\n      console.log(`Loading metrics for ${selectedStartDate} to ${selectedEndDate} with types:`, selectedMetricTypes);\r\n      \r\n      const response = await metricsAPI.getTimeSeriesData(\r\n        selectedStartDate,\r\n        selectedEndDate,\r\n        selectedMetricTypes.length > 0 ? selectedMetricTypes : undefined\r\n      );\r\n      \r\n      console.log('Metrics response:', response.data);\r\n      \r\n      // Filter the data based on selected metric types if any are selected\r\n      let filteredData = response.data.data || [];\r\n      \r\n      if (selectedMetricTypes.length > 0) {\r\n        filteredData = filteredData.filter((metric: any) => \r\n          selectedMetricTypes.includes(metric.metric_type)\r\n        );\r\n        console.log(`Filtered to ${filteredData.length} metrics:`, filteredData.map((m: any) => m.metric_type));\r\n      }\r\n      \r\n      setMetricsData(filteredData);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError('Failed to load metrics data');\r\n      console.error('Error loading metrics:', err);\r\n    } finally {\r\n      setLoadingMetrics(false);\r\n    }\r\n  }, [selectedStartDate, selectedEndDate, selectedMetricTypes]);\r\n\r\n  useEffect(() => {\r\n    if (selectedStartDate && selectedEndDate) {\r\n      loadMetrics();\r\n    }\r\n  }, [selectedStartDate, selectedEndDate, selectedMetricTypes, loadMetrics]);\r\n\r\n  const loadAvailableDates = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await metricsAPI.getAvailableDates();\r\n      setAvailableDates(response.data);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError('Failed to load available dates');\r\n      console.error('Error loading dates:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleMetricTypeToggle = (metricType: string) => {\r\n    setSelectedMetricTypes(prev => \r\n      prev.includes(metricType) \r\n        ? prev.filter(t => t !== metricType)\r\n        : [...prev, metricType]\r\n    );\r\n  };\r\n\r\n  const formatDate = (dateStr: string) => {\r\n    return new Date(dateStr).toLocaleDateString();\r\n  };\r\n\r\n  const formatTime = (timestamp: string) => {\r\n    return new Date(timestamp).toLocaleTimeString();\r\n  };\r\n\r\n  const getMetricStats = (values: any[]): { min: number; max: number; avg: number } => {\r\n    try {\r\n      // Deep safety check - ensure we have a valid array\r\n      if (!Array.isArray(values)) {\r\n        console.warn('getMetricStats: values is not an array:', typeof values, values);\r\n        return { min: 0, max: 0, avg: 0 };\r\n      }\r\n      \r\n      if (values.length === 0) {\r\n        return { min: 0, max: 0, avg: 0 };\r\n      }\r\n      \r\n      // Check for circular references by limiting depth\r\n      const maxDepth = 10;\r\n      let depth = 0;\r\n      \r\n      const flattenValues = (arr: any[], currentDepth: number = 0): number[] => {\r\n        if (currentDepth > maxDepth) {\r\n          console.warn('getMetricStats: Maximum depth exceeded, truncating data');\r\n          return [];\r\n        }\r\n        \r\n        const result: number[] = [];\r\n        for (let i = 0; i < Math.min(arr.length, 1000); i++) { // Limit array size\r\n          const item = arr[i];\r\n          if (typeof item === 'number' && isFinite(item)) {\r\n            result.push(item);\r\n          } else if (Array.isArray(item)) {\r\n            result.push(...flattenValues(item, currentDepth + 1));\r\n          }\r\n        }\r\n        return result;\r\n      };\r\n      \r\n      const validValues = flattenValues(values);\r\n      \r\n      if (validValues.length === 0) {\r\n        console.warn('getMetricStats: No valid numeric values found');\r\n        return { min: 0, max: 0, avg: 0 };\r\n      }\r\n      \r\n      // Use safer math operations\r\n      const sum = validValues.reduce((a, b) => a + b, 0);\r\n      const min = Math.min(...validValues);\r\n      const max = Math.max(...validValues);\r\n      \r\n      return {\r\n        min: isFinite(min) ? min : 0,\r\n        max: isFinite(max) ? max : 1, // Ensure max is never 0\r\n        avg: isFinite(sum / validValues.length) ? sum / validValues.length : 0\r\n      };\r\n    } catch (error) {\r\n      console.error('getMetricStats error:', error);\r\n      return { min: 0, max: 1, avg: 0 };\r\n    }\r\n  };\r\n\r\n  const getSafeChartData = (values: any[], maxPoints: number = 100): number[] => {\r\n    try {\r\n      if (!Array.isArray(values)) return [];\r\n      if (values.length === 0) return [];\r\n      \r\n      // For very large datasets, sample the data to prevent rendering issues\r\n      if (values.length > maxPoints) {\r\n        const step = Math.floor(values.length / maxPoints);\r\n        const sampled = values.filter((_, index) => index % step === 0).slice(0, maxPoints);\r\n        return sampled.filter(v => typeof v === 'number' && isFinite(v));\r\n      }\r\n      \r\n      return values.filter(v => typeof v === 'number' && isFinite(v));\r\n    } catch (error) {\r\n      console.error('getSafeChartData error:', error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const calculateChartHeight = (value: number, maxValue: number): number => {\r\n    try {\r\n      if (!maxValue || maxValue === 0 || !isFinite(maxValue)) return 2;\r\n      if (!value || !isFinite(value)) return 2;\r\n      \r\n      const height = (value / maxValue) * 100;\r\n      return Math.max(Math.min(height, 100), 2); // Clamp between 2% and 100%\r\n    } catch (error) {\r\n      console.error('calculateChartHeight error:', error);\r\n      return 2;\r\n    }\r\n  };\r\n\r\n  const getChartData = (metric: any, chartType: string) => {\r\n    try {\r\n      if (!metric || !Array.isArray(metric.values)) return null;\r\n      \r\n      const values = getSafeChartData(metric.values, 100);\r\n      const timestamps = metric.timestamps ? metric.timestamps.slice(0, values.length) : [];\r\n      \r\n      const colors = [\r\n        'rgba(59, 130, 246, 0.8)',   // Blue\r\n        'rgba(147, 51, 234, 0.8)',   // Purple\r\n        'rgba(16, 185, 129, 0.8)',   // Green\r\n        'rgba(245, 158, 11, 0.8)',   // Yellow\r\n        'rgba(239, 68, 68, 0.8)',    // Red\r\n        'rgba(99, 102, 241, 0.8)',   // Indigo\r\n        'rgba(220, 38, 127, 0.8)'    // Pink\r\n      ];\r\n      \r\n      const metricType = metricTypes.find(mt => mt.value === metric.metric_type);\r\n      const color = metricType?.color || colors[0];\r\n      \r\n      switch (chartType) {\r\n        case 'line':\r\n          return {\r\n            labels: timestamps.length > 0 ? timestamps.map((_: any, i: number) => `Point ${i + 1}`) : values.map((_: any, i: number) => `Point ${i + 1}`),\r\n            datasets: [{\r\n              label: metricType?.label || metric.metric_type,\r\n              data: values,\r\n              borderColor: color,\r\n              backgroundColor: color.replace('0.8', '0.1'),\r\n              borderWidth: 2,\r\n              fill: true,\r\n              tension: 0.4,\r\n              pointRadius: 3,\r\n              pointHoverRadius: 6\r\n            }]\r\n          };\r\n          \r\n        case 'pie':\r\n          // For pie charts, we'll show the distribution of values in ranges\r\n          const ranges = [0, 25, 50, 75, 100];\r\n          const rangeLabels = ['0-25%', '25-50%', '50-75%', '75-100%'];\r\n          const rangeCounts = ranges.slice(0, -1).map((start, i) => {\r\n            const end = ranges[i + 1];\r\n            return values.filter(v => v >= start && v < end).length;\r\n          });\r\n          \r\n          return {\r\n            labels: rangeLabels,\r\n            datasets: [{\r\n              data: rangeCounts,\r\n              backgroundColor: colors.slice(0, rangeCounts.length),\r\n              borderColor: colors.slice(0, rangeCounts.length).map(c => c.replace('0.8', '1')),\r\n              borderWidth: 2\r\n            }]\r\n          };\r\n          \r\n        case 'scatter':\r\n          return {\r\n            datasets: [{\r\n              label: metricType?.label || metric.metric_type,\r\n              data: values.map((value, index) => ({\r\n                x: index,\r\n                y: value\r\n              })),\r\n              backgroundColor: color,\r\n              borderColor: color.replace('0.8', '1'),\r\n              pointRadius: 4,\r\n              pointHoverRadius: 8\r\n            }]\r\n          };\r\n          \r\n        case 'doughnut':\r\n          // For doughnut charts, show min, max, and average\r\n          const stats = getMetricStats(metric.values);\r\n          return {\r\n            labels: ['Min', 'Average', 'Max'],\r\n            datasets: [{\r\n              data: [stats.min, stats.avg, stats.max],\r\n              backgroundColor: [colors[0], colors[1], colors[2]],\r\n              borderColor: [colors[0], colors[1], colors[2]].map(c => c.replace('0.8', '1')),\r\n              borderWidth: 2\r\n            }]\r\n          };\r\n          \r\n        default:\r\n          return null;\r\n      }\r\n    } catch (error) {\r\n      console.error('getChartData error:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const getChartOptions = (chartType: string, metric: any) => {\r\n    const baseOptions = {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      plugins: {\r\n        legend: {\r\n          position: 'top' as const,\r\n          labels: {\r\n            usePointStyle: true,\r\n            padding: 20,\r\n            font: {\r\n              size: 12,\r\n              weight: '600'\r\n            }\r\n          }\r\n        },\r\n        tooltip: {\r\n          mode: 'index' as const,\r\n          intersect: false,\r\n          backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n          titleColor: 'white',\r\n          bodyColor: 'white',\r\n          borderColor: 'rgba(255, 255, 255, 0.2)',\r\n          borderWidth: 1,\r\n          cornerRadius: 8,\r\n          displayColors: true\r\n        }\r\n      },\r\n      interaction: {\r\n        mode: 'nearest' as const,\r\n        axis: 'x' as const,\r\n        intersect: false\r\n      }\r\n    };\r\n\r\n    switch (chartType) {\r\n      case 'line':\r\n        return {\r\n          ...baseOptions,\r\n          scales: {\r\n            x: {\r\n              display: true,\r\n              title: {\r\n                display: true,\r\n                text: 'Data Points',\r\n                font: { weight: '600' }\r\n              },\r\n              grid: {\r\n                color: 'rgba(0, 0, 0, 0.1)',\r\n                drawBorder: false\r\n              }\r\n            },\r\n            y: {\r\n              display: true,\r\n              title: {\r\n                display: true,\r\n                text: metric.unit || 'Value',\r\n                font: { weight: '600' }\r\n              },\r\n              grid: {\r\n                color: 'rgba(0, 0, 0, 0.1)',\r\n                drawBorder: false\r\n              }\r\n            }\r\n          }\r\n        };\r\n        \r\n      case 'scatter':\r\n        return {\r\n          ...baseOptions,\r\n          scales: {\r\n            x: {\r\n              display: true,\r\n              title: {\r\n                display: true,\r\n                text: 'Data Point Index',\r\n                font: { weight: '600' }\r\n              },\r\n              grid: {\r\n                color: 'rgba(0, 0, 0, 0.1)',\r\n                drawBorder: false\r\n              }\r\n            },\r\n            y: {\r\n              display: true,\r\n              title: {\r\n                display: true,\r\n                text: metric.unit || 'Value',\r\n                font: { weight: '600' }\r\n              },\r\n              grid: {\r\n                color: 'rgba(0, 0, 0, 0.1)',\r\n                drawBorder: false\r\n              }\r\n            }\r\n          }\r\n        };\r\n        \r\n      case 'pie':\r\n      case 'doughnut':\r\n        return {\r\n          ...baseOptions,\r\n          plugins: {\r\n            ...baseOptions.plugins,\r\n            tooltip: {\r\n              ...baseOptions.plugins.tooltip,\r\n              callbacks: {\r\n                label: function(context: any) {\r\n                  const label = context.label || '';\r\n                  const value = context.parsed || context.raw;\r\n                  const unit = metric.unit || '';\r\n                  return `${label}: ${value.toFixed(2)}${unit}`;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        };\r\n        \r\n      default:\r\n        return baseOptions;\r\n    }\r\n  };\r\n\r\n  const renderMetricCard = (metric: any, index: number) => {\r\n    try {\r\n      // Validate metric structure\r\n      if (!metric || typeof metric !== 'object') {\r\n        console.warn('Invalid metric object:', metric);\r\n        return null;\r\n      }\r\n      \r\n      if (!Array.isArray(metric.values)) {\r\n        console.warn('Metric values is not an array:', metric.values);\r\n        return null;\r\n      }\r\n      \r\n      const stats = getMetricStats(metric.values);\r\n      const metricType = metricTypes.find(mt => mt.value === metric.metric_type);\r\n      const isLargeDataset = metric.values.length > 1000;\r\n      \r\n      return (\r\n        <div key={index} className=\"bg-white shadow rounded-lg p-6\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <div>\r\n              <h3 className=\"text-lg font-medium text-gray-900\">\r\n                {metricType?.label || metric.metric_type || 'Unknown Metric'}\r\n              </h3>\r\n              <p className=\"text-sm text-gray-500\">\r\n                {metric.component || 'Unknown'} • {metric.unit || ''} • {metric.values.length.toLocaleString()} data points\r\n                {isLargeDataset && (\r\n                  <span className=\"ml-2 text-yellow-600 font-medium\">\r\n                    (Large dataset - chart sampled)\r\n                  </span>\r\n                )}\r\n              </p>\r\n            </div>\r\n            <div className=\"text-right\">\r\n              <div className=\"text-2xl font-bold text-gray-900\">\r\n                {stats.avg.toFixed(1)}{metric.unit || ''}\r\n              </div>\r\n              <div className=\"text-sm text-gray-500\">\r\n                Min: {stats.min.toFixed(1)} | Max: {stats.max.toFixed(1)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Enhanced Chart Visualization */}\r\n          <div className=\"h-64 bg-gray-50 rounded-lg p-4 overflow-hidden\">\r\n            {(() => {\r\n              const chartData = getChartData(metric, selectedChartType);\r\n              const chartOptions = getChartOptions(selectedChartType, metric);\r\n              \r\n              if (!chartData) {\r\n                return (\r\n                  <div className=\"flex items-center justify-center h-full text-gray-500\">\r\n                    <div className=\"text-center\">\r\n                      <div className=\"text-2xl mb-2\">📊</div>\r\n                      <div className=\"text-sm\">Chart data unavailable</div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n              \r\n              try {\r\n                switch (selectedChartType) {\r\n                  case 'line':\r\n                    return <Line data={chartData} options={chartOptions} />;\r\n                  case 'scatter':\r\n                    return <Scatter data={chartData} options={chartOptions} />;\r\n                  case 'pie':\r\n                    return <Pie data={chartData} options={chartOptions} />;\r\n                  case 'doughnut':\r\n                    return <Doughnut data={chartData} options={chartOptions} />;\r\n                  default:\r\n                    return <Line data={chartData} options={chartOptions} />;\r\n                }\r\n              } catch (error) {\r\n                console.error('Chart rendering error:', error);\r\n                return (\r\n                  <div className=\"flex items-center justify-center h-full text-red-500\">\r\n                    <div className=\"text-center\">\r\n                      <div className=\"text-2xl mb-2\">❌</div>\r\n                      <div className=\"text-sm\">Chart rendering failed</div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n            })()}\r\n          </div>\r\n\r\n          {/* Data Table */}\r\n          <div className=\"mt-4\">\r\n            <h4 className=\"text-sm font-medium text-gray-900 mb-2\">\r\n              Recent Data Points {isLargeDataset && `(showing first 10 of ${metric.values.length.toLocaleString()})`}\r\n            </h4>\r\n            <div className=\"max-h-40 overflow-y-auto\">\r\n              <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th className=\"px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Index</th>\r\n                    <th className=\"px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Value</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {metric.values.slice(0, 10).map((value: any, idx: number) => (\r\n                    <tr key={idx}>\r\n                      <td className=\"px-3 py-2 whitespace-nowrap text-sm text-gray-500\">\r\n                        {idx}\r\n                      </td>\r\n                      <td className=\"px-3 py-2 whitespace-nowrap text-sm text-gray-900\">\r\n                        {typeof value === 'number' ? value.toFixed(2) : String(value)}{metric.unit || ''}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } catch (error) {\r\n      console.error('Error rendering metric card:', error);\r\n      return (\r\n        <div key={index} className=\"bg-red-50 border border-red-200 rounded-md p-6\">\r\n          <h3 className=\"text-lg font-medium text-red-800\">Error Rendering Metric</h3>\r\n          <p className=\"text-red-700\">Failed to render metric data. Check console for details.</p>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-64\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div>\r\n        <h1 className=\"text-2xl font-bold text-gray-900\">Hardware Metrics</h1>\r\n        <p className=\"mt-1 text-sm text-gray-500\">\r\n          Detailed hardware metrics and time series analysis\r\n        </p>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\r\n          <div className=\"flex\">\r\n            <div className=\"flex-shrink-0\">\r\n              <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\r\n              </svg>\r\n            </div>\r\n            <div className=\"ml-3\">\r\n              <h3 className=\"text-sm font-medium text-red-800\">Error</h3>\r\n              <p className=\"mt-1 text-sm text-red-700\">{error}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Date Selection */}\r\n      {availableDates && (\r\n        <div className=\"bg-white shadow rounded-lg p-6\">\r\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Date Range</h3>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Start Date</label>\r\n              <select\r\n                value={selectedStartDate}\r\n                onChange={(e) => setSelectedStartDate(e.target.value)}\r\n                className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              >\r\n                <option value=\"\">Select start date</option>\r\n                {availableDates.dates.map(date => (\r\n                  <option key={date} value={date}>{formatDate(date)}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">End Date</label>\r\n              <select\r\n                value={selectedEndDate}\r\n                onChange={(e) => setSelectedEndDate(e.target.value)}\r\n                className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              >\r\n                <option value=\"\">Select end date</option>\r\n                {availableDates.dates.map(date => (\r\n                  <option key={date} value={date}>{formatDate(date)}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"flex items-end\">\r\n              <button\r\n                onClick={loadMetrics}\r\n                disabled={!selectedStartDate || !selectedEndDate || loadingMetrics}\r\n                className=\"w-full bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                {loadingMetrics ? 'Loading...' : 'Load Metrics'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <p className=\"mt-2 text-sm text-gray-500\">\r\n            Available: {availableDates.count} dates from {formatDate(availableDates.date_range.start)} to {formatDate(availableDates.date_range.end)}\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Chart Type Selection */}\r\n      <div className=\"bg-white shadow rounded-lg p-6\">\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Chart Type</h3>\r\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-3\">\r\n          {[\r\n            { value: 'line', label: 'Line Chart', icon: '📈', description: 'Time series trends' },\r\n            { value: 'scatter', label: 'Scatter Plot', icon: '🔵', description: 'Data point distribution' },\r\n            { value: 'pie', label: 'Pie Chart', icon: '🥧', description: 'Value range distribution' },\r\n            { value: 'doughnut', label: 'Doughnut Chart', icon: '🍩', description: 'Min/Avg/Max summary' }\r\n          ].map(chartType => (\r\n            <label key={chartType.value} className=\"flex flex-col items-center space-y-2 cursor-pointer p-3 border-2 rounded-lg hover:bg-gray-50 transition-colors\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"chartType\"\r\n                value={chartType.value}\r\n                checked={selectedChartType === chartType.value}\r\n                onChange={(e) => setSelectedChartType(e.target.value)}\r\n                className=\"sr-only\"\r\n              />\r\n              <div className={`text-2xl ${selectedChartType === chartType.value ? 'scale-110' : ''} transition-transform`}>\r\n                {chartType.icon}\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <div className={`font-medium text-sm ${selectedChartType === chartType.value ? 'text-blue-600' : 'text-gray-700'}`}>\r\n                  {chartType.label}\r\n                </div>\r\n                <div className=\"text-xs text-gray-500 mt-1\">\r\n                  {chartType.description}\r\n                </div>\r\n              </div>\r\n              {selectedChartType === chartType.value && (\r\n                <div className=\"w-2 h-2 bg-blue-600 rounded-full\"></div>\r\n              )}\r\n            </label>\r\n          ))}\r\n        </div>\r\n        <p className=\"mt-3 text-sm text-gray-500 text-center\">\r\n          Select a chart type to visualize your metrics data. Each chart type offers different insights into your hardware performance.\r\n        </p>\r\n      </div>\r\n\r\n      {/* Metric Type Selection */}\r\n      <div className=\"bg-white shadow rounded-lg p-6\">\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Metric Types</h3>\r\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-3\">\r\n          {metricTypes.map(metric => (\r\n            <label key={metric.value} className=\"flex items-center space-x-2 cursor-pointer\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={selectedMetricTypes.length === 0 || selectedMetricTypes.includes(metric.value)}\r\n                onChange={() => handleMetricTypeToggle(metric.value)}\r\n                className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\r\n              />\r\n              <span className={`text-sm ${selectedMetricTypes.length > 0 && !selectedMetricTypes.includes(metric.value) ? 'text-gray-400' : 'text-gray-700'}`}>\r\n                {metric.label}\r\n              </span>\r\n            </label>\r\n          ))}\r\n        </div>\r\n        <div className=\"mt-4 flex items-center justify-between\">\r\n          <p className=\"text-sm text-gray-500\">\r\n            {selectedMetricTypes.length === 0 ? 'All metric types selected' : `${selectedMetricTypes.length} metric types selected`}\r\n          </p>\r\n          {selectedMetricTypes.length > 0 && (\r\n            <button\r\n              onClick={() => setSelectedMetricTypes([])}\r\n              className=\"text-sm text-blue-600 hover:text-blue-800 underline\"\r\n            >\r\n              Show All Types\r\n            </button>\r\n          )}\r\n        </div>\r\n        {selectedMetricTypes.length > 0 && (\r\n          <div className=\"mt-2 p-2 bg-blue-50 border border-blue-200 rounded-md\">\r\n            <p className=\"text-xs text-blue-700\">\r\n              <strong>Filtering Active:</strong> Only showing {selectedMetricTypes.join(', ')} metrics. \r\n              Data will reload automatically when you change the selection.\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Metrics Display */}\r\n      {loadingMetrics && (\r\n        <div className=\"flex items-center justify-center h-32\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n\r\n      {!loadingMetrics && metricsData.length > 0 && (\r\n        <div className=\"space-y-6\">\r\n          {/* Large Dataset Warning */}\r\n          {metricsData.some(metric => metric.values.length > 1000) && (\r\n            <div className=\"bg-yellow-50 border border-yellow-200 rounded-md p-4\">\r\n              <div className=\"flex\">\r\n                <div className=\"flex-shrink-0\">\r\n                  <svg className=\"h-5 w-5 text-yellow-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                    <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                </div>\r\n                <div className=\"ml-3\">\r\n                  <h3 className=\"text-sm font-medium text-yellow-800\">Large Dataset Detected</h3>\r\n                  <p className=\"mt-1 text-sm text-yellow-700\">\r\n                    Some metrics contain large amounts of data. Charts are automatically sampled to prevent performance issues. \r\n                    Full data is available in the data table below.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {metricsData.map((metric, index) => renderMetricCard(metric, index))}\r\n        </div>\r\n      )}\r\n\r\n      {!loadingMetrics && metricsData.length === 0 && selectedStartDate && selectedEndDate && (\r\n        <div className=\"bg-white shadow rounded-lg p-6\">\r\n          <div className=\"text-center py-12\">\r\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No Metrics Data</h3>\r\n            <p className=\"text-gray-500\">\r\n              No metrics data found for the selected date range. Try selecting different dates or check if the backend is running.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Metrics;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}